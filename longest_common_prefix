Question 6:
//Implement a function that finds the longest common prefix of a given set of strings.

fn longest_common_prefix(strs: &[String]) -> String {

    if strs.is_empty() {
        return String::new();
    }
    let mut prefix = strs[0].clone();
    for s in &strs[1..] {
        while !s.starts_with(&prefix) {
            prefix.pop();
        }
    }
    prefix
}
fn main() {
    let strings1 = vec!["flower".to_string(), "flow".to_string(), "flight".to_string()];
    let strings2 = vec!["dog".to_string(), "racecar".to_string(), "car".to_string()];

    println!("Longest common prefix of {:?}: {}", strings1, longest_common_prefix(&strings1));
    println!("Longest common prefix of {:?}: {}", strings2, longest_common_prefix(&strings2));
}

